if (rootProject.ext.isModuleDebug){
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'

android {
    namespace 'com.register'
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
//        resourcePrefix "register_"

        if (rootProject.ext.isModuleDebug){
            applicationId "com.register"
        }
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        buildConfigField("boolean", "isModuleDebug", String.valueOf(rootProject.ext.isModuleDebug))
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ AROUTER_MODULE_NAME: project.getName() ]
            }
        }
        kapt {
            arguments {
                //ARouter
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }
    kotlinOptions {
        jvmTarget = rootProject.ext.jvmTargetVersion
    }

    buildFeatures {
        buildConfig true
        dataBinding true
    }

    sourceSets {
        main {
            if (rootProject.ext.isModuleDebug){
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    exclude 'module/**'	//移除module文件夹下的资源,即 debug/AndroidManifest.xml
                }
            }
        }
    }
}

dependencies {
    implementation project(':lib_common')
    implementation project(':module_base_router')
    implementation project(':lib_network_retrofit_coroutine')

    implementation rootProject.ext.depsLibs.core_ktx
    implementation rootProject.ext.depsLibs.appcompat
    implementation rootProject.ext.depsLibs.material
    testImplementation rootProject.ext.depsLibs.junit
    implementation rootProject.ext.depsLibs.activity_ktx
    implementation rootProject.ext.depsLibs.fragment_ktx
    implementation rootProject.ext.depsLibs.lifecycle_ktx

    androidTestImplementation rootProject.ext.depsLibs.androidTest
    androidTestImplementation rootProject.ext.depsLibs.espresso


    kapt rootProject.ext.depsLibs.arouterCompiler

}